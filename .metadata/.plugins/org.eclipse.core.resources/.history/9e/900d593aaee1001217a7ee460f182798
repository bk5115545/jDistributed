
public class Program {
	
	private boolean executed = false;
	private long programID = 0L;
	private Object[] arguements = null;
	
	@SuppressWarnings("rawtypes")
	Class toCall = null;
	
	@SuppressWarnings("rawtypes")
	public Program(Class c) {
		toCall = c;
		
		createID();
	}
	
	@SuppressWarnings("rawtypes")
	public Program(Class c, Object[] arguements) {
		toCall = c;
		this.arguements = arguements;
		
		createID();
	}
	
	private void createID() {
		programID = (long) (System.nanoTime()%(Math.random()*100000));
	}

	@SuppressWarnings("unused")
	@Override
	public void run() {
		try {
			Object instance = toCall.newInstance();
		} catch (InstantiationException | IllegalAccessException e) {
			e.printStackTrace();
		}
	}
	
}
